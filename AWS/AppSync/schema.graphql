type PaginatedEvents {
  events: [Event!]
  nextToken: String
}

type EstablishmentSuggestions {
  establishments: [Establishment] 
}

type PaginatedEstablishments {
  establishments: [Establishment!]
  nextToken: String
}

type Event {
  id: ID
  establishmentId: String!
  awayTeam: String!
  awayTeamBadge: String
  homeTeam: String!
  homeTeamBadge: String
  leagueId: String!
  sportsDbId: String #Not required because we might not find the event in sportsDbId
  startTime: String!
  coverCharge: Boolean!
  description: String
}

type Establishment {
  id: ID
  managerUsername: String 
  googlePlaceId: String!
  googlePhotoReference: String
  name: String!
  displayName: String #removed (!) required because some of the establishments I have registered so far do not have this attribute yet, put back later on
  address: String!
  phone: String #removed (!) required because some establishments do not have a phone
  lat: String!
  lng: String!
}

type Mutation {
  #  If an item exists it's updated. If it does not it's created.
  putEvent(
    id: ID,
    establishmentId: String!
    awayTeam: String!,
    awayTeamBadge: String
    homeTeam: String!,
    homeTeamBadge: String
    leagueId: String!,
    sportsDbId: String, #not required (!) because we might not get an eventId from thesportsdb.com
    startTime: String!,
    coverCharge: Boolean!
    description: String
  ): Event

  putEstablishment(
    #id: ID # Handled in request mapping template, not requiered here
    #managerUsername: String!, # Handled in request mapping template, not requiered here
    googlePlaceId: String!
    name: String!
    displayName: String!
    address: String!
    phone: String,
    lat: String!,
    lng: String!
   ): Establishment
}

type Query {
  getEvents(limit: Int, nextToken: String, establishmentId: String!): PaginatedEvents!
  getEstablishmentsUserManages(limit: Int, nextToken: String): PaginatedEstablishments!
  getEstablishmentById(id: String!): Establishment!
  getEstablishmentsInBounds(limit: Int, latMin: String!, latMax: String!, lngMin: String!, lngMax: String!): PaginatedEstablishments!
  getEstablishmentSuggestions(pattern: String!): EstablishmentSuggestions
}
